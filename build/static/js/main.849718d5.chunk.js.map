{"version":3,"sources":["components/Wheel/index.js","components/Tab/Result.js","components/Tab/ItemForm/ItemForm.jsx","components/Customize/ColorPicker.js","components/Customize/Customize.js","components/NavigationBar.js","components/MusicPlayer/assets/Tiếng vỗ tay.mp3","components/MusicPlayer/assets/Kiếp Đỏ Đen.mp3","components/MusicPlayer/assets/Xổ Số Kiến Thiết - DXY Remix.mp3","components/MusicPlayer/assets/Xổ Số Kiến Thiết phiên bản tượt lô Hậu 6h30..mp3","App.js","reportWebVitals.js","index.js"],"names":["Wheel","props","state","selectedItem","selectItem","bind","this","items","length","spinning","Math","floor","random","onChange","onSelectItem","setState","setTimeout","console","log","wheelVars","spinDuration","localStorage","getItem","cssProperties","wheelColor","fontColor","style","className","lg","onClick","map","item","index","React","Component","defaultProps","ItemForm","Container","styled","span","ColorPicker","value","value2","onChange2","rest","type","Customize","useState","updateState","state2","updateState2","Tabs","defaultActiveKey","id","Tab","eventKey","title","Box","sx","width","Slider","aria-label","defaultValue","getAriaValueText","setItem","min","step","max","valueLabelDisplay","marks","label","e","target","NavigationBar","openModal","setOpenModal","cancelModal","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","Modal","show","onHide","size","Body","Footer","Button","variant","App","setSpinning","winners","setWinners","window","setWheelColor","setFontColor","JSON","parse","setItems","newWinnerIndex","color","Header","closeButton","Title","winner","indexOf","splice","stringify","fluid","Row","Col","md","data","selectedIndex","concat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.849718d5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./index.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Wheel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedItem: null,\r\n    };\r\n    this.selectItem = this.selectItem.bind(this);\r\n  }\r\n\r\n  selectItem() {\r\n    if (this.props.items.length === 0 || this.props.spinning === true) {\r\n      console.log(\"Can't spin a empty wheel or spinning wheel\");\r\n      return;\r\n    }\r\n    if (this.state.selectedItem === null) {\r\n      const selectedItem = Math.floor(Math.random() * this.props.items.length);\r\n      this.props.onChange(selectedItem);\r\n      if (this.props.onSelectItem) {\r\n        this.props.onSelectItem(selectedItem);\r\n      }\r\n      this.setState({ selectedItem });\r\n    } else {\r\n      this.setState({ selectedItem: null });\r\n      setTimeout(this.selectItem, 500);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { selectedItem } = this.state;\r\n    const { items } = this.props;\r\n\r\n    const wheelVars = {\r\n      \"--nb-item\": items.length,\r\n      \"--selected-item\": selectedItem,\r\n    };\r\n    const spinning = selectedItem !== null ? \"spinning\" : \"\";\r\n    let spinDuration = localStorage.getItem(\"duration\");\r\n\r\n    let cssProperties = {};\r\n\r\n    cssProperties[\"--spinning-duration\"] = `${spinDuration}s`;\r\n    cssProperties[\"--wheel-color\"] = `${this.props.wheelColor}`;\r\n    cssProperties[\"--neutral-color\"] = `${this.props.fontColor}`;\r\n\r\n    if (cssProperties[\"--wheel-color\"] === \"null\")\r\n      cssProperties[\"--wheel-color\"] = \"#d38c12\";\r\n\r\n    if (cssProperties[\"--neutral-color\"] === \"null\")\r\n      cssProperties[\"--neutral-color\"] = \"#FFFFFF\";\r\n\r\n    return (\r\n      <div style={cssProperties}>\r\n        <h1 className=\"text-center\">Click to spin</h1>\r\n        <div className=\"wheel-container\">\r\n          <div\r\n            lg={true}\r\n            className={`wheel ${spinning}`}\r\n            style={wheelVars}\r\n            onClick={this.selectItem}\r\n          >\r\n            {items.map((item, index) => (\r\n              <div\r\n                className=\"wheel-item\"\r\n                key={index}\r\n                style={{ \"--item-nb\": index }}\r\n              >\r\n                {item}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Define prop types\r\nWheel.propTypes = { items: PropTypes.array.isRequired };\r\n\r\n// Define default prop values\r\nWheel.defaultProps = {\r\n  items: [\r\n    \"Ali\",\r\n    \"Beatriz\",\r\n    \"Charles\",\r\n    \"Diya\",\r\n    \"Eric\",\r\n    \"Fatima\",\r\n    \"Gabriel\",\r\n    \"Hanna\",\r\n  ],\r\n};\r\n","import React from \"react\";\r\n\r\nexport default class Result extends React.Component {\r\n  clearList = () => {\r\n    this.props.onChange();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          id=\"clearListButton\"\r\n          className=\"btn btn-primary disableElement\"\r\n          onClick={this.clearList}\r\n        >\r\n          Clear the list\r\n        </button>\r\n        <ul>\r\n          {this.props.winners.map((winner, index) => (\r\n            <li key={index} className=\"mt-1\">\r\n              {winner}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import SearchBar from \"../SearchBar/SearchBar\";\r\nimport { useState } from \"react\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport \"./ItemForm.css\";\r\n\r\nfunction ItemForm(props) {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const [value, setValue] = useState(props.items);\r\n\r\n  function handleChange(e) {\r\n    const newValue = e.target.value.split(\"\\n\");\r\n    setValue(newValue);\r\n  }\r\n\r\n  // use Fisher–Yates Shuffle algorithm: https://bost.ocks.org/mike/shuffle/\r\n  function Shuffle() {\r\n    var array = JSON.parse(localStorage.getItem(\"itemsList\"));\r\n    let currentIndex = JSON.parse(localStorage.getItem(\"itemsList\")).length,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (currentIndex !== 0) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n\r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex],\r\n        array[currentIndex],\r\n      ];\r\n    }\r\n    setValue(array);\r\n  }\r\n\r\n  function RemoveDuplicate() {\r\n    let uniqueItems = [...new Set(value.map((s) => s.trim()))];\r\n    setValue(Array.from(uniqueItems));\r\n  }\r\n\r\n  return (\r\n    <div className=\"mt-10\">\r\n      <div\r\n        className=\"\r\n      d-flex \r\n      flex-column \r\n      flex-sm-column \r\n      flex-md-column \r\n      flex-lg-row \r\n      justify-content-lg-start \r\n     \"\r\n      >\r\n        <button\r\n          id=\"shuffleButton\"\r\n          className=\"\r\n          btn btn-primary\r\n          flex-lg-grow-1 \r\n          me-lg-2\r\n          mb-md-2 \r\n          mb-sm-2 \r\n          mb-lg-0\r\n          mb-2\r\n          \"\r\n          variant=\"light\"\r\n          onClick={Shuffle}\r\n        >\r\n          <i className=\"bi bi-shuffle me-3\"></i>Shuffle\r\n        </button>\r\n        <button\r\n          id=\"removeButton\"\r\n          className=\"btn btn-primary flex-lg-grow-1\"\r\n          variant=\"light\"\r\n          onClick={RemoveDuplicate}\r\n        >\r\n          <i class=\"bi bi-trash me-3\"></i>\r\n          Remove duplicate\r\n        </button>\r\n      </div>\r\n      <SearchBar placeholder=\"Search...\" data={value} />\r\n      <textarea\r\n        id=\"inputTextArea\"\r\n        className=\"form-control w-100 mt-2 p-10\"\r\n        value={value?.join(\"\\n\")}\r\n        onChange={handleChange}\r\n        rows={17}\r\n        cols={15}\r\n      ></textarea>\r\n      <button\r\n        id=\"updateButton\"\r\n        className=\"btn btn-primary disableElement w-100 mt-2\"\r\n        onClick={() => {\r\n          props.onClick(value.filter((e) => e));\r\n        }}\r\n      >\r\n        Update\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// styled-components\r\nconst Container = styled.span`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  width: 150px;\r\n  max-width: 150px;\r\n  padding: 4px 12px;\r\n  border: 1px solid #bfc9d9;\r\n  border-radius: 4px;\r\n\r\n  input[type=\"color\"] {\r\n    margin-right: 8px;\r\n    -webkit-appearance: none;\r\n    border: none;\r\n    width: auto;\r\n    height: auto;\r\n    cursor: pointer;\r\n    background: none;\r\n    &::-webkit-color-swatch-wrapper {\r\n      padding: 0;\r\n      width: 14px;\r\n      height: 14px;\r\n    }\r\n    &::-webkit-color-swatch {\r\n      border: 1px solid #bfc9d9;\r\n      border-radius: 4px;\r\n      padding: 0;\r\n    }\r\n  }\r\n\r\n  input[type=\"text\"] {\r\n    border: none;\r\n    width: 100%;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst ColorPicker = ({ value, value2, onChange, onChange2, ...rest }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"mt-3\">\r\n        <p>Choose wheel color:</p>\r\n        <Container>\r\n          <input type=\"color\" value={value} onChange={onChange} {...rest} />\r\n          <input type=\"text\" value={value} onChange={onChange} {...rest} />\r\n        </Container>\r\n      </div>\r\n      <div className=\"mt-3\">\r\n        <p>Choose font color:</p>\r\n        <Container>\r\n          <input type=\"color\" value={value2} onChange={onChange2} {...rest} />\r\n          <input type=\"text\" value={value2} onChange={onChange2} {...rest} />\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nColorPicker.propTypes = {};\r\n\r\nexport default ColorPicker;\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport ColorPicker from \"./ColorPicker\";\r\nimport { Tabs, Tab } from \"react-bootstrap\";\r\n\r\nexport default function Customize() {\r\n  // wheel color\r\n  const [state, updateState] = useState(localStorage.getItem(\"wheelColor\"));\r\n\r\n  // font color\r\n  const [state2, updateState2] = useState(localStorage.getItem(\"fontColor\"));\r\n\r\n  const marks = [\r\n    {\r\n      value: 10,\r\n      label: \"10\",\r\n    },\r\n    {\r\n      value: 20,\r\n      label: \"20\",\r\n    },\r\n    {\r\n      value: 30,\r\n      label: \"30\",\r\n    },\r\n    {\r\n      value: 40,\r\n      label: \"40\",\r\n    },\r\n    {\r\n      value: 50,\r\n      label: \"50\",\r\n    },\r\n    {\r\n      value: 60,\r\n      label: \"60\",\r\n    },\r\n  ];\r\n\r\n  function valuetext(value) {\r\n    localStorage.setItem(\"duration\", value);\r\n    return `${value}`;\r\n  }\r\n\r\n  // handle wheel color input\r\n  const handleInput = (e) => {\r\n    updateState(e.target.value);\r\n    localStorage.setItem(\"wheelColor\", state);\r\n  };\r\n\r\n  // handle font color input\r\n  const handleInput2 = (e) => {\r\n    updateState2(e.target.value);\r\n    localStorage.setItem(\"fontColor\", state2);\r\n  };\r\n\r\n  return (\r\n    <Tabs\r\n      defaultActiveKey=\"during-spin\"\r\n      id=\"uncontrolled-tab-example\"\r\n      className=\"mb-3\"\r\n    >\r\n      <Tab eventKey=\"during-spin\" title=\"During spin\">\r\n        <div className=\"mt-3\">\r\n          <p>Spin time (seconds) </p>\r\n          <Box sx={{ width: \"100%\" }}>\r\n            <Slider\r\n              aria-label=\"Custom marks\"\r\n              defaultValue={localStorage.getItem(\"duration\")}\r\n              getAriaValueText={valuetext}\r\n              min={1}\r\n              step={1}\r\n              max={60}\r\n              valueLabelDisplay=\"auto\"\r\n              marks={marks}\r\n            />\r\n          </Box>\r\n        </div>\r\n      </Tab>\r\n      <Tab eventKey=\"appearance\" title=\"Appearance\">\r\n        <ColorPicker\r\n          value={state}\r\n          onChange={handleInput}\r\n          value2={state2}\r\n          onChange2={handleInput2}\r\n        />\r\n      </Tab>\r\n    </Tabs>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Customize from \"./Customize/Customize\";\r\nimport { Button, Modal, Navbar, Nav } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction NavigationBar(props) {\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  function cancelModal() {\r\n    setOpenModal(false);\r\n    props.onChange({\r\n      wheelColor: localStorage.getItem(\"wheelColor\"),\r\n      fontColor: localStorage.getItem(\"fontColor\"),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#home\">\r\n          <h3 className=\"d-inline ms-2\">Lucky Draw</h3>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\r\n          <Nav.Link onClick={() => setOpenModal(true)}>\r\n            <i className=\"bi bi-palette-fill me-2\"></i>\r\n            Customize\r\n          </Nav.Link>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <Modal show={openModal} onHide={cancelModal} size=\"lg\">\r\n        <Modal.Body>\r\n          <Customize />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={cancelModal}>\r\n            Done\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavigationBar;\r\n","export default __webpack_public_path__ + \"static/media/Tiếng vỗ tay.2e205f5d.mp3\";","export default __webpack_public_path__ + \"static/media/Kiếp Đỏ Đen.bb994dd8.mp3\";","export default __webpack_public_path__ + \"static/media/Xổ Số Kiến Thiết - DXY Remix.d658fa3d.mp3\";","export default __webpack_public_path__ + \"static/media/Xổ Số Kiến Thiết phiên bản tượt lô Hậu 6h30..3dbb1844.mp3\";","/* eslint-disable no-unused-vars */\r\nimport { React, useState } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport Wheel from \"./components/Wheel\";\r\nimport ItemForm from \"./components/Tab/ItemForm/ItemForm\";\r\nimport Result from \"./components/Tab/Result\";\r\nimport NavigationBar from \"./components/NavigationBar\";\r\nimport { Button, Modal, Container, Row, Col, Tabs, Tab } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport \"./App.css\";\r\nimport MusicPlayer from \"./components/MusicPlayer/MusicPlayer\";\r\n\r\nfunction App() {\r\n  const [spinning, setSpinning] = useState(false);\r\n\r\n  const [winners, setWinners] = useState([]);\r\n\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  // player for youtube url\r\n  const [player, setPlayer] = useState();\r\n\r\n  const [urlInput, setUrlInput] = useState();\r\n\r\n  if (window.localStorage.getItem(\"duration\") === null)\r\n    localStorage.setItem(\"duration\", 10);\r\n\r\n  if (window.localStorage.getItem(\"wheelColor\") === null)\r\n    localStorage.setItem(\"wheelColor\", \"#d38c12\");\r\n\r\n  if (window.localStorage.getItem(\"fontColor\") === null)\r\n    localStorage.setItem(\"fontColor\", \"#FFFFFF\");\r\n\r\n  const [duration, setDuration] = useState(\r\n    window.localStorage.getItem(\"duration\")\r\n  );\r\n\r\n  const [wheelColor, setWheelColor] = useState(\r\n    window.localStorage.getItem(\"wheelColor\")\r\n  );\r\n\r\n  const [fontColor, setFontColor] = useState(\r\n    window.localStorage.getItem(\"fontColor\")\r\n  );\r\n\r\n  const [items, setItems] = useState(() => {\r\n    const value = window.localStorage.getItem(\"itemsList\");\r\n    return value !== null\r\n      ? JSON.parse(value)\r\n      : [\r\n          \"Ali\",\r\n          \"Beatriz\",\r\n          \"Charles\",\r\n          \"Diya\",\r\n          \"Eric\",\r\n          \"Fatima\",\r\n          \"Gabriel\",\r\n          \"Hanna\",\r\n        ];\r\n  });\r\n\r\n  const [url, setUrl] = useState(() => {\r\n    const value = window.localStorage.getItem(\"urlYoutube\");\r\n    return value !== null ? `${value}` : null;\r\n  });\r\n\r\n  const [controls, setControls] = useState(true);\r\n\r\n  const [loop, setLoop] = useState(true);\r\n\r\n  function load(url) {\r\n    setUrl(url);\r\n  }\r\n\r\n  function handleToggleLoop() {\r\n    setLoop(!loop);\r\n  }\r\n\r\n  function ref(player) {\r\n    setPlayer(player);\r\n  }\r\n\r\n  function changeWheelAndFontColor(color) {\r\n    setWheelColor(color.wheelColor);\r\n    setFontColor(color.fontColor);\r\n  }\r\n\r\n  function cancelModal() {\r\n    setOpenModal(false);\r\n  }\r\n\r\n  function addData(val) {\r\n    localStorage.setItem(\"itemsList\", JSON.stringify(val));\r\n    setItems(JSON.parse(window.localStorage.getItem(\"itemsList\")));\r\n  }\r\n\r\n  // use arrow function so we don't have to .bind(this) in constructor\r\n  function clearListEventHandler() {\r\n    setWinners([]);\r\n  }\r\n\r\n  function removeWinnerModal() {\r\n    const winner = winners[winners.length - 1];\r\n    const index = items.indexOf(winner);\r\n    items.splice(index, 1);\r\n    setItems(items);\r\n    setOpenModal(false);\r\n    console.log(`Removed ${winner} from entries.`);\r\n    localStorage.setItem(\"itemsList\", JSON.stringify(items));\r\n  }\r\n\r\n  function selectResultEventHandler(data) {\r\n    if (items.length > 0 && spinning !== true) {\r\n      var selectedIndex = data;\r\n\r\n      // set this state to disable tab and wheel click when spinning\r\n      setSpinning(true);\r\n\r\n      // when spinning disable update player\r\n      // document.getElementById(\"inputTextArea\").disabled = true;\r\n      // document.getElementById(\"updateButton\").disabled = true;\r\n      // document.getElementById(\"inputSearchBar\").disabled = true;\r\n      // document.getElementById(\"shuffleButton\").disabled = true;\r\n      // document.getElementById(\"removeButton\").disabled = true;\r\n      // document.getElementById(\"clearListButton\").disabled = true;\r\n\r\n      // after done spinning enable update player\r\n      setTimeout(() => {\r\n        setSpinning(false);\r\n        // document.getElementById(\"inputTextArea\").disabled = false;\r\n        // document.getElementById(\"updateButton\").disabled = false;\r\n        // document.getElementById(\"inputSearchBar\").disabled = false;\r\n        // document.getElementById(\"shuffleButton\").disabled = false;\r\n        // document.getElementById(\"removeButton\").disabled = false;\r\n        // document.getElementById(\"clearListButton\").disabled = false;\r\n      }, window.localStorage.getItem(\"duration\") * 1000);\r\n\r\n      setTimeout(() => {\r\n        setWinners(winners.concat(items[selectedIndex]));\r\n      }, window.localStorage.getItem(\"duration\") * 1000);\r\n\r\n      setTimeout(() => {\r\n        setOpenModal(true);\r\n      }, window.localStorage.getItem(\"duration\") * 1000);\r\n    }\r\n  }\r\n\r\n  let newWinnerIndex = winners.length - 1;\r\n\r\n  return (\r\n    <div>\r\n      <NavigationBar onChange={changeWheelAndFontColor} />\r\n      <Modal show={openModal} onHide={cancelModal} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>We have a winner 🎉</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>{winners[newWinnerIndex]}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={cancelModal}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={removeWinnerModal}>\r\n            Remove\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col className=\"mt-4\" lg=\"6\" md=\"auto\">\r\n            <Wheel\r\n              items={items}\r\n              onChange={selectResultEventHandler}\r\n              spinning={spinning}\r\n              wheelColor={wheelColor}\r\n              fontColor={fontColor}\r\n            />\r\n          </Col>\r\n          {/* <Col lg=\"3\" md=\"auto\">\r\n            <div id=\"Tabs\" className=\"mt-4\">\r\n              <Tabs defaultActiveKey=\"entries\" className=\"mb-3\">\r\n                <Tab eventKey=\"entries\" title=\"Entries\">\r\n                  <ItemForm\r\n                    items={items}\r\n                    winners={winners}\r\n                    onClick={(value) => addData(value)}\r\n                    // pass this key to fix bug when remove winner, textarea won't update\r\n                    // read more: https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\r\n                    key={items}\r\n                  />\r\n                </Tab>\r\n                <Tab eventKey=\"results\" title=\"Results\">\r\n                  <Result onChange={clearListEventHandler} winners={winners} />\r\n                </Tab>\r\n              </Tabs>\r\n            </div>\r\n          </Col> */}\r\n          {/* <Col\r\n            className=\"mt-4\"\r\n            xxl={{ span: 3, order: \"first\" }}\r\n            xl={{ span: 3, order: \"first\" }}\r\n            lg={{ span: 3, order: \"first\" }}\r\n            md={{ order: \"last\" }}\r\n          >\r\n            <section id=\"youtubeSection\" className=\"section\">\r\n              <h2>Youtube url player</h2>\r\n              <ReactPlayer\r\n                ref={ref}\r\n                className=\"react-player\"\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                url={url}\r\n                playing={false}\r\n                controls={controls}\r\n                light={false}\r\n                loop={loop}\r\n                volume={null}\r\n                muted={false}\r\n                onReady={() => console.log(\"onReady\")}\r\n                onStart={() => console.log(\"onStart\")}\r\n                onBuffer={() => console.log(\"onBuffer\")}\r\n                onSeek={(e) => console.log(\"onSeek\", e)}\r\n                onError={(e) => console.log(\"onError\", e)}\r\n              />\r\n\r\n              <form className=\"form-inline mt-3\">\r\n                <div class=\"input-group mb-3\">\r\n                  <input\r\n                    ref={(input) => {\r\n                      setUrlInput(input);\r\n                    }}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter URL\"\r\n                  />\r\n                  <button\r\n                    class=\"btn btn-primary\"\r\n                    type=\"button\"\r\n                    id=\"button-addon2\"\r\n                    onClick={() => {\r\n                      localStorage.setItem(\"urlYoutube\", urlInput.value);\r\n                      setUrl(window.localStorage.getItem(\"urlYoutube\"));\r\n                    }}\r\n                  >\r\n                    Load\r\n                  </button>\r\n                </div>\r\n                <form className=\"form-inline w-100 mt-2 mb-3 form-check\">\r\n                  {\" \"}\r\n                  <label className=\"form-check-label\">Loop</label>\r\n                  <input\r\n                    id=\"loop\"\r\n                    checked={loop}\r\n                    onChange={handleToggleLoop}\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                  />\r\n                </form>\r\n              </form>\r\n              <form className=\"form-inline mt-10\">\r\n                <h2>Music player</h2>\r\n                <MusicPlayer />\r\n              </form>\r\n            </section>\r\n          </Col> */}\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}